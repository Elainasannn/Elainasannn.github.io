<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>テーブルクロスのカスタム価格計算</title>
    <style>
        /* 新增样式：将 logo 容器居中 */
        .logo-container {
            text-align: center;
            margin-bottom: 20px;
        }

        .logo {
            max-width: 200px; /* 可根据实际情况调整 logo 大小 */
        }

        .calculator {
            border: 1px solid #ccc;
            padding: 20px;
            margin: 20px auto; /* 修改此处，使计算器水平居中 */
            background-color: #f9f9f9;
            max-width: 400px; /* 可根据实际情况调整计算器的最大宽度 */
        }

        .calculator label {
            display: block;
            margin-bottom: 5px;
        }

        .calculator input,
        .calculator select {
            margin-bottom: 15px;
            width: 200px;
            padding: 5px;
        }

        .calculator button {
            padding: 8px 15px;
            background-color: #007BFF;
            color: white;
            border: none;
            cursor: pointer;
        }

        .calculator button:hover {
            background-color: #0056b3;
        }

        .calculator #result {
            margin-top: 20px;
        }
    </style>
</head>

<body>
    <!-- 新增 logo 容器 -->
    <div class="logo-container">
        <img src="logo.png" alt="Logo" class="logo">
    </div>
    <div class="calculator">
        <h2>テーブルクロスのカスタム価格計算</h2>
        <label for="shape">テーブルクロスの形状:</label>
        <select id="shape">
            <option value="square">正方形</option>
            <option value="circle">円形</option>
        </select>
        <br>
        <div id="square-dimensions">
            <label for="length">テーブルクロスの長さ (センチメートル):</label>
            <input type="number" id="length" step="0.1" required>
            <br>
            <label for="width">テーブルクロスの幅 (センチメートル):</label>
            <input type="number" id="width" step="0.1" required>
        </div>
        <div id="circle-dimensions" style="display: none;">
            <label for="diameter">テーブルクロスの直径 (センチメートル):</label>
            <input type="number" id="diameter" step="0.1" required>
        </div>
        <label for="thickness">テーブルクロスの厚さ:</label>
        <select id="thickness">
            <option value="1">1 ミリメートル</option>
            <option value="1.5">1.5 ミリメートル</option>
            <option value="2">2 ミリメートル</option>
            <option value="3">3 ミリメートル</option>
        </select>
        <br>
        <button onclick="calculatePrice()">価格を計算する</button>
        <div id="result"></div>
    </div>

    <script>
        const shapeSelect = document.getElementById('shape');
        const squareDimensions = document.getElementById('square-dimensions');
        const circleDimensions = document.getElementById('circle-dimensions');
        const thicknessSelect = document.getElementById('thickness');
        const lengthInput = document.getElementById('length');
        const widthInput = document.getElementById('width');
        const diameterInput = document.getElementById('diameter');

        shapeSelect.addEventListener('change', function () {
            if (this.value === 'square') {
                squareDimensions.style.display = 'block';
                circleDimensions.style.display = 'none';
            } else {
                squareDimensions.style.display = 'none';
                circleDimensions.style.display = 'block';
            }
            calculatePrice();
        });

        // 
        thicknessSelect.addEventListener('change', calculatePrice);

        // 
        lengthInput.addEventListener('input', calculatePrice);
        widthInput.addEventListener('input', calculatePrice);

        // 
        diameterInput.addEventListener('input', calculatePrice);

        function calculatePrice() {
            const shape = document.getElementById('shape').value;
            let area;
            let costArea;
            if (shape === 'square') {
                const length = parseFloat(lengthInput.value);
                const width = parseFloat(widthInput.value);
                if (isNaN(length) || isNaN(width) || length <= 0 || width <= 0) {
                    document.getElementById('result').innerHTML = "有効なサイズを入力してください。";
                    return;
                }
                area = (length * width) / 10000;
                costArea = area;
            } else {
                const diameter = parseFloat(diameterInput.value);
                if (isNaN(diameter) || diameter <= 0) {
                    document.getElementById('result').innerHTML = "有効な直径を入力してください。";
                    return;
                }
                area = (Math.PI * Math.pow(diameter / 2, 2)) / 10000;
                costArea = (diameter * diameter) / 10000;
            }

            const thickness = parseFloat(thicknessSelect.value);
            if (isNaN(thickness) || thickness <= 0) {
                document.getElementById('result').innerHTML = "有効な厚さを入力してください。";
                return;
            }

            const costPerSquareMeter = {
                1: 26,
                1.5: 36.1,
                2: 48.1,
                3: 72.2
            };
            const weightPerSquareMeter = {
                1: 1.3,
                1.5: 2,
                2: 2.65,
                3: 3.92
            };

            let productCost = costArea * costPerSquareMeter[thickness];
            productCost = Math.ceil(productCost + 1);
            // 
            productCost = Math.max(productCost, 10);

            let totalWeight = area * weightPerSquareMeter[thickness];
            totalWeight = Math.ceil(totalWeight * 10) / 10 + 1;

            let shippingFee = 0;
            let shortSide;
            if (shape === 'square') {
                const length = parseFloat(lengthInput.value);
                const width = parseFloat(widthInput.value);
                shortSide = Math.min(length, width);
            } else {
                const diameter = parseFloat(diameterInput.value);
                shortSide = diameter;
            }

            if (totalWeight <= 5 && shortSide <= 110) {
                if (totalWeight <= 2) {
                    const additionalWeight = Math.ceil((totalWeight - 0.5) / 0.5);
                    shippingFee = 33 + additionalWeight * 4;
                } else {
                    const additionalWeight = Math.ceil((totalWeight - 0.5) / 0.5);
                    shippingFee = 33 + additionalWeight * 5;
                }
            } else {
                if (totalWeight <= 20) {
                    const additionalWeight = Math.ceil((totalWeight - 0.5) / 0.5);
                    shippingFee = 35 + additionalWeight * 5;
                }
            }

            const staffCostRate = 0.03;
            const commissionRate = 0.32;
            const profitRate = 0.23;
            const totalCost = productCost + shippingFee;
            const finalPriceCNY = totalCost / (1 - profitRate - staffCostRate - commissionRate);
            const exchangeRate = 0.045;
            let finalPriceJPY = finalPriceCNY / exchangeRate;
            const remainder = finalPriceJPY % 100;
            if (remainder > 80) {
                finalPriceJPY = Math.ceil(finalPriceJPY / 100) * 100 + 80;
            } else {
                finalPriceJPY = Math.floor(finalPriceJPY / 100) * 100 + 80;
            }

            document.getElementById('result').innerHTML = `お見積り価格: ${finalPriceJPY.toFixed(0)} 円`;
        }
    </script>
</body>

</html>
